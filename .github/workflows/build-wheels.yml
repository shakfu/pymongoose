name: Build Wheels

on:
  workflow_dispatch:
    inputs:
      publish_target:
        description: 'Where to publish after build'
        required: true
        type: choice
        options:
          - 'none'
          - 'testpypi'
          - 'pypi'
          - 'both'
        default: 'none'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          # Build for Python 3.9-3.13
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"

          # Skip 32-bit builds and musl on Linux, ARM on Windows
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_* *-win_arm64"

          # Install build dependencies (Cython is critical)
          CIBW_BUILD_DEPENDS: "Cython>=3.0.0"

          # Run tests after building (optional, comment out if tests are slow)
          CIBW_TEST_REQUIRES: "pytest>=8.4.2"
          CIBW_TEST_COMMAND: "pytest {project}/tests -v -k 'not examples'"

          # Platform-specific settings
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "AMD64"

          # Ensure C99 support on all platforms
          CIBW_ENVIRONMENT_LINUX: "CFLAGS='-O3 -std=c99'"
          CIBW_ENVIRONMENT_MACOS: "CFLAGS='-O3 -std=c99'"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build Cython>=3.0.0

      - name: Build sdist
        run: python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          if-no-files-found: error

  publish_testpypi:
    name: Publish to TestPyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: |
      github.event.inputs.publish_target == 'testpypi' ||
      github.event.inputs.publish_target == 'both'
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pymongoose
    permissions:
      id-token: write  # Required for trusted publishing

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          # Uses trusted publishing (no API token needed)
          # Configure at: https://test.pypi.org/manage/account/publishing/

  publish_pypi:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: |
      github.event.inputs.publish_target == 'pypi' ||
      github.event.inputs.publish_target == 'both'
    environment:
      name: pypi
      url: https://pypi.org/p/pymongoose
    permissions:
      id-token: write  # Required for trusted publishing

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          # Uses trusted publishing (no API token needed)
          # Configure at: https://pypi.org/manage/account/publishing/
